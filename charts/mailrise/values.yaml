# Default values for mailrise.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: yoryan/mailrise
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

livenessProbe:
  exec:
    command:
      - ps
      - '-ef'
      - '|'
      - grep
      - mailrise
readinessProbe:
  exec:
    command:
      - ps
      - '-ef'
      - '|'
      - grep
      - mailrise

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

envVarsConfigmap:
  enabled: false
  existingConfigMap: ""
  values: {}

filesConfigmap:
  enabled: true
  existingConfigMap: ""
  values: 
    mailrise.conf: |
      #tls:
      #  mode: starttls
      #  certfile: /path/to/certificate.pem
      #  keyfile: /path/to/privatekey.pem

      #smtp:
      #  auth:
      #    basic:
      #      username: password
      #      AzureDiamond: hunter2

      configs: 
        # Wildcard targets are evaluated in the order they appear in the
        # configuration file, and Mailrise uses the first match. So, this config
        # will catch any addresses not matched by the previous targets.
        #
        # Note that if you use "*" as your pattern, Mailrise will expand that to
        # "*@mailrise.xyz", which is probably not the catch-all target you wanted.
        #
        "*@*":
          urls:
            - discord://WEBHOOK_ID/WEBHOOK_TOKEN
            # You can also insert environment variables, a feature lifted directly
            # from Home Assistant. This is useful for reading secrets from
            # container orchestrators like Kubernetes.
            - !env_var MY_SECRET_URL
    
secrets:
  enabled: false
  existingSecret: ""
  values: {}
