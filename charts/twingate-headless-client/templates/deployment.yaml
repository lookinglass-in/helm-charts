{{- if not .Values.daemonset.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "twingate-headless-client.fullname" . }}
  labels:
    {{- include "twingate-headless-client.labels" . | nindent 4 }}
spec:
  {{- if not .Values.deployment.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "twingate-headless-client.selectorLabels" . | nindent 6 }}
  strategy:
    type: Recreate
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "twingate-headless-client.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "twingate-headless-client.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          
          # livenessProbe:
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - twingate status | grep -q 'online' && exit 0 || exit 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 60
          # readinessProbe:
          #   exec:
          #     command:
          #       - /bin/sh
          #       - -c
          #       - twingate status | grep -q 'online' && exit 0 || exit 1
          #   initialDelaySeconds: 10
          #   periodSeconds: 30
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: mydevice0
              mountPath: /dev/net/tun
          env:          
              {{- range .Values.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
          {{- end }}
      hostNetwork: true
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}  
      volumes:
        - name: mydevice0
          hostPath:
            path: /dev/net/tun
{{- end }}
